using System;

namespace PeriodicTasks.MailLogger.Config
{
    /// <summary>
    /// Holds configurations of events that can be protocolled by the maillog class
    /// </summary>
    [Serializable]
    public class EventConfiguration
    {
        /// <summary>
        /// The event-types on which the logger must log
        /// </summary>
        public MailEventTypes LoggedEventTypes { get; set; }

        /// <summary>
        /// A Condition that must be fullfilled in order to send a log-mail
        /// </summary>
        public string LogConditionExpression { get; set; }

        /// <summary>
        /// A Format-Expression for the log-message
        /// </summary>
        public string LogMessageFormat { get; set; }

        /// <summary>Returns a string that represents the current object.</summary>
        /// <returns>A string that represents the current object.</returns>
        /// <filterpriority>2</filterpriority>
        public override string ToString()
        {
            return $"When {LoggedEventTypes} (Condition: {LogConditionExpression}, Format: {LogMessageFormat})";
        }
    }
    
    /// <summary>
    /// An enum that holds all possible events of a Task
    /// </summary>
    [Flags]
    public enum MailEventTypes
    {
        /// <summary>
        /// The start of a task
        /// </summary>
        TaskStart = 1,

        /// <summary>
        /// The end of a task
        /// </summary>
        TaskEnd = 2,

        /// <summary>
        /// The start of a step
        /// </summary>
        TaskStepStart = 4,

        /// <summary>
        /// The end of a step
        /// </summary>
        TaskStepEnd = 8,

        /// <summary>
        /// A Message that is generated by a processing worker
        /// </summary>
        TaskMessage = 16,

        /// <summary>
        /// the irregular, but planned exit of a job
        /// </summary>
        TaskTerminationPlanned = 32,

        /// <summary>
        /// the irregular, but planned exit of a job due to a RunCondition that resulted to false
        /// </summary>
        TaskTerminationDueToRunCondition = 64,

        /// <summary>
        /// The task has ended due to an error that was not handled.
        /// </summary>
        TaskEndWithErrors = 128
    }
}
