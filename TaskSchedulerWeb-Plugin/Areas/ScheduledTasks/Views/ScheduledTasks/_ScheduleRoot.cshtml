@using System.Collections
@using ITVComponents.WebCoreToolkit.Net.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Extensions
@using Kendo.Mvc.UI
@using TaskSchedulerWeb.Areas.ScheduledTasks.Controllers

@(Html.Kendo().Grid<ScheduledTasksController.PeriodicScheduleTabViewModel>()
                        .Name($"AssignedSchedule{ViewData["PeriodicTaskId"]}")
                        .Resizable(r => r.Columns(true))
                        .Sortable()
                        .Navigatable()
                        .Editable(editing => editing.Mode(GridEditMode.InLine))
                        .ToolBar(tb =>
                        {
                            tb.RefreshTable();
                            tb.Create().Text("add Schedule");

                        })
                        .DataSource(binding => binding.Ajax()
                            .Read(r => r.Action("GetSchedules", "ScheduledTasks", new { pPeriodicTaskId = ViewData["PeriodicTaskId"] }))
                            .Update(r => r.Action("UpdateSchedule", "ScheduledTasks", new { pPeriodicTaskId = ViewData["PeriodicTaskId"] }))
                            .Create(r => r.Action("InsertSchedule", "ScheduledTasks", new { pPeriodicTaskId = ViewData["PeriodicTaskId"] }))
                            .Destroy(r => r.Action("DeleteSchedule", "ScheduledTasks", new { pPeriodicTaskId = ViewData["PeriodicTaskId"] }))
                            .Events(e => e.Error("ITVenture.Pages.TaskScheduler.TaskScheduler.error_handler"))
                            .Model(m =>
                            {
                                m.Id(f => f.PeriodicScheduleId);
                                //m.Field(f => f.Period).DefaultValue("o");
                                //m.Field(f => f.Occurrence).DefaultValue(1);

                            }).Sort(s => s.Add(o => o.PeriodicScheduleId).Descending()))
                        .Columns(cols =>
                        {
                            cols.Bound(d => d.PeriodicScheduleId).Hidden();
                            cols.Bound(d => d.Name).Width(200);
                            cols.ForeignKey(d => d.Period, (IEnumerable)ViewData["Periods"], "Value", "Text").Width(150);
                            cols.Bound(d => d.SchedulerName);
                            cols.Bound(d => d.FirstDate).Width(140).Format("{0:dd.MM.yyyy}");
                            cols.ForeignKey(d => d.Occurrence, (IEnumerable)ViewData["Occurrences"], "Value", "Text").Width(100);
                            cols.ForeignKey(d => d.Mod, (IEnumerable)ViewData["Moduluses"], "Value", "Text").Width(100);
                            cols.Command(cmd =>
                            {

                                cmd.Edit().HtmlAttributes(new { title = "Edit" });
                                cmd.PopupConfirmDelete();

                            }).Width(100);
                        }).ClientDetailTemplateId("SchedulerProperties"))