// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeriodicTasks.DbContext;

#nullable disable

namespace PeriodicTasks.DbContext.Migrations
{
    [DbContext(typeof(TaskSchedulerContext))]
    [Migration("20220819062340_TenantSupport")]
    partial class TenantSupport
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ITVComponents.Plugins.DatabaseDrivenConfiguration.Models.DatabasePlugin", b =>
                {
                    b.Property<int>("PluginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PluginId"), 1L, 1);

                    b.Property<string>("Constructor")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("DisabledReason")
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoadOrder")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UniqueName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PluginId");

                    b.HasIndex(new[] { "TenantId" }, "IX_PlugInTenant");

                    b.ToTable("Plugins", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicLog", b =>
                {
                    b.Property<int>("PeriodicLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicLogId"), 1L, 1);

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<int>("PeriodicRunId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodicStepId")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PeriodicLogId");

                    b.HasIndex("PeriodicRunId");

                    b.HasIndex("PeriodicStepId");

                    b.HasIndex(new[] { "TenantId" }, "IX_LogMessageTenant");

                    b.ToTable("PeriodicLog", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicMonth", b =>
                {
                    b.Property<int>("PeriodicMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicMonthId"), 1L, 1);

                    b.Property<bool>("Apr")
                        .HasColumnType("bit");

                    b.Property<bool>("Aug")
                        .HasColumnType("bit");

                    b.Property<bool>("Dec")
                        .HasColumnType("bit");

                    b.Property<bool>("Feb")
                        .HasColumnType("bit");

                    b.Property<bool>("Jan")
                        .HasColumnType("bit");

                    b.Property<bool>("Jul")
                        .HasColumnType("bit");

                    b.Property<bool>("Jun")
                        .HasColumnType("bit");

                    b.Property<bool>("Mar")
                        .HasColumnType("bit");

                    b.Property<bool>("May")
                        .HasColumnType("bit");

                    b.Property<bool>("Nov")
                        .HasColumnType("bit");

                    b.Property<bool>("Oct")
                        .HasColumnType("bit");

                    b.Property<int>("PeriodicScheduleId")
                        .HasColumnType("int");

                    b.Property<bool>("Sep")
                        .HasColumnType("bit");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PeriodicMonthId");

                    b.HasIndex("PeriodicScheduleId");

                    b.HasIndex(new[] { "TenantId" }, "IX_ScheduleMonthTenant");

                    b.ToTable("PeriodicMonths", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicMonthday", b =>
                {
                    b.Property<int>("PeriodicMonthdayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicMonthdayId"), 1L, 1);

                    b.Property<int>("DayNum")
                        .HasColumnType("int");

                    b.Property<int>("PeriodicScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PeriodicMonthdayId");

                    b.HasIndex("PeriodicScheduleId");

                    b.HasIndex(new[] { "TenantId" }, "IX_ScheduleMonthDayTenant");

                    b.ToTable("PeriodicMonthdays", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicRun", b =>
                {
                    b.Property<int>("PeriodicRunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicRunId"), 1L, 1);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeriodicTaskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PeriodicRunId");

                    b.HasIndex("PeriodicTaskId");

                    b.HasIndex(new[] { "TenantId" }, "IX_RunTenant");

                    b.ToTable("PeriodicRuns", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicSchedule", b =>
                {
                    b.Property<int>("PeriodicScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicScheduleId"), 1L, 1);

                    b.Property<DateTime>("FirstDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mod")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occurrence")
                        .HasColumnType("int");

                    b.Property<bool>("OnServiceStart")
                        .HasColumnType("bit");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodicTaskId")
                        .HasColumnType("int");

                    b.Property<string>("SchedulerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PeriodicScheduleId");

                    b.HasIndex("PeriodicTaskId");

                    b.HasIndex(new[] { "TenantId" }, "IX_ScheduleTenant");

                    b.ToTable("PeriodicSchedules", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicStep", b =>
                {
                    b.Property<int>("PeriodicStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicStepId"), 1L, 1);

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExclusiveAreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputVariable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodicTaskId")
                        .HasColumnType("int");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeriodicStepId");

                    b.HasIndex("PeriodicTaskId");

                    b.HasIndex(new[] { "TenantId" }, "IX_StepTenant");

                    b.ToTable("PeriodicSteps", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicStepParameter", b =>
                {
                    b.Property<int>("PeriodicStepParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicStepParameterId"), 1L, 1);

                    b.Property<string>("ParameterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodicStepId")
                        .HasColumnType("int");

                    b.Property<string>("Settings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeriodicStepParameterId");

                    b.HasIndex("PeriodicStepId");

                    b.HasIndex(new[] { "TenantId" }, "IX_StepParamTenant");

                    b.ToTable("PeriodicStepParameters", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicTask", b =>
                {
                    b.Property<int>("PeriodicTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicTaskId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExclusiveAreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PeriodicTaskId");

                    b.HasIndex(new[] { "TenantId" }, "IX_TaskTenant");

                    b.ToTable("PeriodicTasks", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicTime", b =>
                {
                    b.Property<int>("PeriodicTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicTimeId"), 1L, 1);

                    b.Property<int>("PeriodicScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeriodicTimeId");

                    b.HasIndex("PeriodicScheduleId");

                    b.HasIndex(new[] { "TenantId" }, "IX_ScheduleTimeTenant");

                    b.ToTable("PeriodicTimes", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicWeekday", b =>
                {
                    b.Property<int>("PeriodicWeekdayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicWeekdayId"), 1L, 1);

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<int>("PeriodicScheduleId")
                        .HasColumnType("int");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("PeriodicWeekdayId");

                    b.HasIndex("PeriodicScheduleId");

                    b.HasIndex(new[] { "TenantId" }, "IX_ScheduleWeekDayTenant");

                    b.ToTable("PeriodicWeekDays", (string)null);
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicLog", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicRun", "PeriodicRun")
                        .WithMany("PeriodicLogs")
                        .HasForeignKey("PeriodicRunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicStep", "PeriodicStep")
                        .WithMany("PeriodicLogs")
                        .HasForeignKey("PeriodicStepId");

                    b.Navigation("PeriodicRun");

                    b.Navigation("PeriodicStep");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicMonth", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicSchedule", "PeriodicSchedule")
                        .WithMany("PeriodicMonths")
                        .HasForeignKey("PeriodicScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodicSchedule");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicMonthday", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicSchedule", "PeriodicSchedule")
                        .WithMany("PeriodicMonthdays")
                        .HasForeignKey("PeriodicScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodicSchedule");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicRun", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicTask", "PeriodicTask")
                        .WithMany("PeriodicRuns")
                        .HasForeignKey("PeriodicTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodicTask");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicSchedule", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicTask", "PeriodicTask")
                        .WithMany("PeriodicSchedules")
                        .HasForeignKey("PeriodicTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodicTask");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicStep", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicTask", "PeriodicTask")
                        .WithMany("PeriodicSteps")
                        .HasForeignKey("PeriodicTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodicTask");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicStepParameter", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicStep", "PeriodicStep")
                        .WithMany("PeriodicStepParameters")
                        .HasForeignKey("PeriodicStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodicStep");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicTime", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicSchedule", "PeriodicSchedule")
                        .WithMany("PeriodicTimes")
                        .HasForeignKey("PeriodicScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodicSchedule");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicWeekday", b =>
                {
                    b.HasOne("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicSchedule", "PeriodicSchedule")
                        .WithMany("PeriodicWeekdays")
                        .HasForeignKey("PeriodicScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodicSchedule");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicRun", b =>
                {
                    b.Navigation("PeriodicLogs");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicSchedule", b =>
                {
                    b.Navigation("PeriodicMonthdays");

                    b.Navigation("PeriodicMonths");

                    b.Navigation("PeriodicTimes");

                    b.Navigation("PeriodicWeekdays");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicStep", b =>
                {
                    b.Navigation("PeriodicLogs");

                    b.Navigation("PeriodicStepParameters");
                });

            modelBuilder.Entity("PeriodicTasks.DatabaseDrivenTaskLoading.Models.PeriodicTask", b =>
                {
                    b.Navigation("PeriodicRuns");

                    b.Navigation("PeriodicSchedules");

                    b.Navigation("PeriodicSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
